// SPDX-License-Identifier: Apache-2.0
pragma solidity ^0.8.24;

import "wormhole-sdk/libraries/BytesParsing.sol";

// This file was auto-generated by wormhole-solidity-sdk gen/libraryTestWrapper.ts

contract BytesParsingTestWrapper {
  function checkBound(uint offset, uint length) external pure {
    BytesParsing.checkBound(offset, length);
  }

  function checkLength(uint encodedLength, uint expectedLength) external pure {
    BytesParsing.checkLength(encodedLength, expectedLength);
  }

  function sliceCdUnchecked(
    bytes calldata encoded,
    uint offset,
    uint length
  ) external pure returns (bytes calldata ret, uint nextOffset) {
    return BytesParsing.sliceCdUnchecked(encoded, offset, length);
  }

  function sliceMemUnchecked(
    bytes calldata encoded,
    uint offset,
    uint length
  ) external pure returns (bytes memory ret, uint nextOffset) {
    return BytesParsing.sliceMemUnchecked(encoded, offset, length);
  }

  function sliceCd(
    bytes calldata encoded,
    uint offset,
    uint length
  ) external pure returns (bytes calldata ret, uint nextOffset) {
    return BytesParsing.sliceCd(encoded, offset, length);
  }

  function sliceMem(
    bytes calldata encoded,
    uint offset,
    uint length
  ) external pure returns (bytes memory ret, uint nextOffset) {
    return BytesParsing.sliceMem(encoded, offset, length);
  }

  function sliceUint8PrefixedCdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes calldata ret, uint nextOffset) {
    return BytesParsing.sliceUint8PrefixedCdUnchecked(encoded, offset);
  }

  function sliceUint8PrefixedCd(bytes calldata encoded, uint offset) external pure returns (bytes calldata ret, uint nextOffset) {
    return BytesParsing.sliceUint8PrefixedCd(encoded, offset);
  }

  function sliceUint8PrefixedMemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset) {
    return BytesParsing.sliceUint8PrefixedMemUnchecked(encoded, offset);
  }

  function sliceUint8PrefixedMem(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset) {
    return BytesParsing.sliceUint8PrefixedMem(encoded, offset);
  }

  function sliceUint16PrefixedCdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes calldata ret, uint nextOffset) {
    return BytesParsing.sliceUint16PrefixedCdUnchecked(encoded, offset);
  }

  function sliceUint16PrefixedCd(bytes calldata encoded, uint offset) external pure returns (bytes calldata ret, uint nextOffset) {
    return BytesParsing.sliceUint16PrefixedCd(encoded, offset);
  }

  function sliceUint16PrefixedMemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset) {
    return BytesParsing.sliceUint16PrefixedMemUnchecked(encoded, offset);
  }

  function sliceUint16PrefixedMem(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset) {
    return BytesParsing.sliceUint16PrefixedMem(encoded, offset);
  }

  function sliceUint32PrefixedCdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes calldata ret, uint nextOffset) {
    return BytesParsing.sliceUint32PrefixedCdUnchecked(encoded, offset);
  }

  function sliceUint32PrefixedCd(bytes calldata encoded, uint offset) external pure returns (bytes calldata ret, uint nextOffset) {
    return BytesParsing.sliceUint32PrefixedCd(encoded, offset);
  }

  function sliceUint32PrefixedMemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset) {
    return BytesParsing.sliceUint32PrefixedMemUnchecked(encoded, offset);
  }

  function sliceUint32PrefixedMem(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset) {
    return BytesParsing.sliceUint32PrefixedMem(encoded, offset);
  }

  function asAddressCdUnchecked(bytes calldata encoded, uint offset) external pure returns (address ret, uint nextOffset) {
    return BytesParsing.asAddressCdUnchecked(encoded, offset);
  }

  function asAddressCd(bytes calldata encoded, uint offset) external pure returns (address ret, uint nextOffset) {
    return BytesParsing.asAddressCd(encoded, offset);
  }

  function asAddressMemUnchecked(bytes calldata encoded, uint offset) external pure returns (address ret, uint nextOffset) {
    return BytesParsing.asAddressMemUnchecked(encoded, offset);
  }

  function asAddressMem(bytes calldata encoded, uint offset) external pure returns (address ret, uint nextOffset) {
    return BytesParsing.asAddressMem(encoded, offset);
  }

  function asBoolCdUnchecked(bytes calldata encoded, uint offset) external pure returns (bool ret, uint nextOffset) {
    return BytesParsing.asBoolCdUnchecked(encoded, offset);
  }

  function asBoolCd(bytes calldata encoded, uint offset) external pure returns (bool ret, uint nextOffset) {
    return BytesParsing.asBoolCd(encoded, offset);
  }

  function asBoolMemUnchecked(bytes calldata encoded, uint offset) external pure returns (bool ret, uint nextOffset) {
    return BytesParsing.asBoolMemUnchecked(encoded, offset);
  }

  function asBoolMem(bytes calldata encoded, uint offset) external pure returns (bool ret, uint nextOffset) {
    return BytesParsing.asBoolMem(encoded, offset);
  }

  function asUint8CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint8 ret, uint nextOffset) {
    return BytesParsing.asUint8CdUnchecked(encoded, offset);
  }

  function asUint8Cd(bytes calldata encoded, uint offset) external pure returns (uint8 ret, uint nextOffset) {
    return BytesParsing.asUint8Cd(encoded, offset);
  }

  function asUint8MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint8 ret, uint nextOffset) {
    return BytesParsing.asUint8MemUnchecked(encoded, offset);
  }

  function asUint8Mem(bytes calldata encoded, uint offset) external pure returns (uint8 ret, uint nextOffset) {
    return BytesParsing.asUint8Mem(encoded, offset);
  }

  function asUint16CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint16 ret, uint nextOffset) {
    return BytesParsing.asUint16CdUnchecked(encoded, offset);
  }

  function asUint16Cd(bytes calldata encoded, uint offset) external pure returns (uint16 ret, uint nextOffset) {
    return BytesParsing.asUint16Cd(encoded, offset);
  }

  function asUint16MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint16 ret, uint nextOffset) {
    return BytesParsing.asUint16MemUnchecked(encoded, offset);
  }

  function asUint16Mem(bytes calldata encoded, uint offset) external pure returns (uint16 ret, uint nextOffset) {
    return BytesParsing.asUint16Mem(encoded, offset);
  }

  function asUint24CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint24 ret, uint nextOffset) {
    return BytesParsing.asUint24CdUnchecked(encoded, offset);
  }

  function asUint24Cd(bytes calldata encoded, uint offset) external pure returns (uint24 ret, uint nextOffset) {
    return BytesParsing.asUint24Cd(encoded, offset);
  }

  function asUint24MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint24 ret, uint nextOffset) {
    return BytesParsing.asUint24MemUnchecked(encoded, offset);
  }

  function asUint24Mem(bytes calldata encoded, uint offset) external pure returns (uint24 ret, uint nextOffset) {
    return BytesParsing.asUint24Mem(encoded, offset);
  }

  function asUint32CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint32 ret, uint nextOffset) {
    return BytesParsing.asUint32CdUnchecked(encoded, offset);
  }

  function asUint32Cd(bytes calldata encoded, uint offset) external pure returns (uint32 ret, uint nextOffset) {
    return BytesParsing.asUint32Cd(encoded, offset);
  }

  function asUint32MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint32 ret, uint nextOffset) {
    return BytesParsing.asUint32MemUnchecked(encoded, offset);
  }

  function asUint32Mem(bytes calldata encoded, uint offset) external pure returns (uint32 ret, uint nextOffset) {
    return BytesParsing.asUint32Mem(encoded, offset);
  }

  function asUint40CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint40 ret, uint nextOffset) {
    return BytesParsing.asUint40CdUnchecked(encoded, offset);
  }

  function asUint40Cd(bytes calldata encoded, uint offset) external pure returns (uint40 ret, uint nextOffset) {
    return BytesParsing.asUint40Cd(encoded, offset);
  }

  function asUint40MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint40 ret, uint nextOffset) {
    return BytesParsing.asUint40MemUnchecked(encoded, offset);
  }

  function asUint40Mem(bytes calldata encoded, uint offset) external pure returns (uint40 ret, uint nextOffset) {
    return BytesParsing.asUint40Mem(encoded, offset);
  }

  function asUint48CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint48 ret, uint nextOffset) {
    return BytesParsing.asUint48CdUnchecked(encoded, offset);
  }

  function asUint48Cd(bytes calldata encoded, uint offset) external pure returns (uint48 ret, uint nextOffset) {
    return BytesParsing.asUint48Cd(encoded, offset);
  }

  function asUint48MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint48 ret, uint nextOffset) {
    return BytesParsing.asUint48MemUnchecked(encoded, offset);
  }

  function asUint48Mem(bytes calldata encoded, uint offset) external pure returns (uint48 ret, uint nextOffset) {
    return BytesParsing.asUint48Mem(encoded, offset);
  }

  function asUint56CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint56 ret, uint nextOffset) {
    return BytesParsing.asUint56CdUnchecked(encoded, offset);
  }

  function asUint56Cd(bytes calldata encoded, uint offset) external pure returns (uint56 ret, uint nextOffset) {
    return BytesParsing.asUint56Cd(encoded, offset);
  }

  function asUint56MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint56 ret, uint nextOffset) {
    return BytesParsing.asUint56MemUnchecked(encoded, offset);
  }

  function asUint56Mem(bytes calldata encoded, uint offset) external pure returns (uint56 ret, uint nextOffset) {
    return BytesParsing.asUint56Mem(encoded, offset);
  }

  function asUint64CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint64 ret, uint nextOffset) {
    return BytesParsing.asUint64CdUnchecked(encoded, offset);
  }

  function asUint64Cd(bytes calldata encoded, uint offset) external pure returns (uint64 ret, uint nextOffset) {
    return BytesParsing.asUint64Cd(encoded, offset);
  }

  function asUint64MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint64 ret, uint nextOffset) {
    return BytesParsing.asUint64MemUnchecked(encoded, offset);
  }

  function asUint64Mem(bytes calldata encoded, uint offset) external pure returns (uint64 ret, uint nextOffset) {
    return BytesParsing.asUint64Mem(encoded, offset);
  }

  function asUint72CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint72 ret, uint nextOffset) {
    return BytesParsing.asUint72CdUnchecked(encoded, offset);
  }

  function asUint72Cd(bytes calldata encoded, uint offset) external pure returns (uint72 ret, uint nextOffset) {
    return BytesParsing.asUint72Cd(encoded, offset);
  }

  function asUint72MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint72 ret, uint nextOffset) {
    return BytesParsing.asUint72MemUnchecked(encoded, offset);
  }

  function asUint72Mem(bytes calldata encoded, uint offset) external pure returns (uint72 ret, uint nextOffset) {
    return BytesParsing.asUint72Mem(encoded, offset);
  }

  function asUint80CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint80 ret, uint nextOffset) {
    return BytesParsing.asUint80CdUnchecked(encoded, offset);
  }

  function asUint80Cd(bytes calldata encoded, uint offset) external pure returns (uint80 ret, uint nextOffset) {
    return BytesParsing.asUint80Cd(encoded, offset);
  }

  function asUint80MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint80 ret, uint nextOffset) {
    return BytesParsing.asUint80MemUnchecked(encoded, offset);
  }

  function asUint80Mem(bytes calldata encoded, uint offset) external pure returns (uint80 ret, uint nextOffset) {
    return BytesParsing.asUint80Mem(encoded, offset);
  }

  function asUint88CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint88 ret, uint nextOffset) {
    return BytesParsing.asUint88CdUnchecked(encoded, offset);
  }

  function asUint88Cd(bytes calldata encoded, uint offset) external pure returns (uint88 ret, uint nextOffset) {
    return BytesParsing.asUint88Cd(encoded, offset);
  }

  function asUint88MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint88 ret, uint nextOffset) {
    return BytesParsing.asUint88MemUnchecked(encoded, offset);
  }

  function asUint88Mem(bytes calldata encoded, uint offset) external pure returns (uint88 ret, uint nextOffset) {
    return BytesParsing.asUint88Mem(encoded, offset);
  }

  function asUint96CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint96 ret, uint nextOffset) {
    return BytesParsing.asUint96CdUnchecked(encoded, offset);
  }

  function asUint96Cd(bytes calldata encoded, uint offset) external pure returns (uint96 ret, uint nextOffset) {
    return BytesParsing.asUint96Cd(encoded, offset);
  }

  function asUint96MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint96 ret, uint nextOffset) {
    return BytesParsing.asUint96MemUnchecked(encoded, offset);
  }

  function asUint96Mem(bytes calldata encoded, uint offset) external pure returns (uint96 ret, uint nextOffset) {
    return BytesParsing.asUint96Mem(encoded, offset);
  }

  function asUint104CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint104 ret, uint nextOffset) {
    return BytesParsing.asUint104CdUnchecked(encoded, offset);
  }

  function asUint104Cd(bytes calldata encoded, uint offset) external pure returns (uint104 ret, uint nextOffset) {
    return BytesParsing.asUint104Cd(encoded, offset);
  }

  function asUint104MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint104 ret, uint nextOffset) {
    return BytesParsing.asUint104MemUnchecked(encoded, offset);
  }

  function asUint104Mem(bytes calldata encoded, uint offset) external pure returns (uint104 ret, uint nextOffset) {
    return BytesParsing.asUint104Mem(encoded, offset);
  }

  function asUint112CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint112 ret, uint nextOffset) {
    return BytesParsing.asUint112CdUnchecked(encoded, offset);
  }

  function asUint112Cd(bytes calldata encoded, uint offset) external pure returns (uint112 ret, uint nextOffset) {
    return BytesParsing.asUint112Cd(encoded, offset);
  }

  function asUint112MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint112 ret, uint nextOffset) {
    return BytesParsing.asUint112MemUnchecked(encoded, offset);
  }

  function asUint112Mem(bytes calldata encoded, uint offset) external pure returns (uint112 ret, uint nextOffset) {
    return BytesParsing.asUint112Mem(encoded, offset);
  }

  function asUint120CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint120 ret, uint nextOffset) {
    return BytesParsing.asUint120CdUnchecked(encoded, offset);
  }

  function asUint120Cd(bytes calldata encoded, uint offset) external pure returns (uint120 ret, uint nextOffset) {
    return BytesParsing.asUint120Cd(encoded, offset);
  }

  function asUint120MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint120 ret, uint nextOffset) {
    return BytesParsing.asUint120MemUnchecked(encoded, offset);
  }

  function asUint120Mem(bytes calldata encoded, uint offset) external pure returns (uint120 ret, uint nextOffset) {
    return BytesParsing.asUint120Mem(encoded, offset);
  }

  function asUint128CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint128 ret, uint nextOffset) {
    return BytesParsing.asUint128CdUnchecked(encoded, offset);
  }

  function asUint128Cd(bytes calldata encoded, uint offset) external pure returns (uint128 ret, uint nextOffset) {
    return BytesParsing.asUint128Cd(encoded, offset);
  }

  function asUint128MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint128 ret, uint nextOffset) {
    return BytesParsing.asUint128MemUnchecked(encoded, offset);
  }

  function asUint128Mem(bytes calldata encoded, uint offset) external pure returns (uint128 ret, uint nextOffset) {
    return BytesParsing.asUint128Mem(encoded, offset);
  }

  function asUint136CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint136 ret, uint nextOffset) {
    return BytesParsing.asUint136CdUnchecked(encoded, offset);
  }

  function asUint136Cd(bytes calldata encoded, uint offset) external pure returns (uint136 ret, uint nextOffset) {
    return BytesParsing.asUint136Cd(encoded, offset);
  }

  function asUint136MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint136 ret, uint nextOffset) {
    return BytesParsing.asUint136MemUnchecked(encoded, offset);
  }

  function asUint136Mem(bytes calldata encoded, uint offset) external pure returns (uint136 ret, uint nextOffset) {
    return BytesParsing.asUint136Mem(encoded, offset);
  }

  function asUint144CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint144 ret, uint nextOffset) {
    return BytesParsing.asUint144CdUnchecked(encoded, offset);
  }

  function asUint144Cd(bytes calldata encoded, uint offset) external pure returns (uint144 ret, uint nextOffset) {
    return BytesParsing.asUint144Cd(encoded, offset);
  }

  function asUint144MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint144 ret, uint nextOffset) {
    return BytesParsing.asUint144MemUnchecked(encoded, offset);
  }

  function asUint144Mem(bytes calldata encoded, uint offset) external pure returns (uint144 ret, uint nextOffset) {
    return BytesParsing.asUint144Mem(encoded, offset);
  }

  function asUint152CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint152 ret, uint nextOffset) {
    return BytesParsing.asUint152CdUnchecked(encoded, offset);
  }

  function asUint152Cd(bytes calldata encoded, uint offset) external pure returns (uint152 ret, uint nextOffset) {
    return BytesParsing.asUint152Cd(encoded, offset);
  }

  function asUint152MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint152 ret, uint nextOffset) {
    return BytesParsing.asUint152MemUnchecked(encoded, offset);
  }

  function asUint152Mem(bytes calldata encoded, uint offset) external pure returns (uint152 ret, uint nextOffset) {
    return BytesParsing.asUint152Mem(encoded, offset);
  }

  function asUint160CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint160 ret, uint nextOffset) {
    return BytesParsing.asUint160CdUnchecked(encoded, offset);
  }

  function asUint160Cd(bytes calldata encoded, uint offset) external pure returns (uint160 ret, uint nextOffset) {
    return BytesParsing.asUint160Cd(encoded, offset);
  }

  function asUint160MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint160 ret, uint nextOffset) {
    return BytesParsing.asUint160MemUnchecked(encoded, offset);
  }

  function asUint160Mem(bytes calldata encoded, uint offset) external pure returns (uint160 ret, uint nextOffset) {
    return BytesParsing.asUint160Mem(encoded, offset);
  }

  function asUint168CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint168 ret, uint nextOffset) {
    return BytesParsing.asUint168CdUnchecked(encoded, offset);
  }

  function asUint168Cd(bytes calldata encoded, uint offset) external pure returns (uint168 ret, uint nextOffset) {
    return BytesParsing.asUint168Cd(encoded, offset);
  }

  function asUint168MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint168 ret, uint nextOffset) {
    return BytesParsing.asUint168MemUnchecked(encoded, offset);
  }

  function asUint168Mem(bytes calldata encoded, uint offset) external pure returns (uint168 ret, uint nextOffset) {
    return BytesParsing.asUint168Mem(encoded, offset);
  }

  function asUint176CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint176 ret, uint nextOffset) {
    return BytesParsing.asUint176CdUnchecked(encoded, offset);
  }

  function asUint176Cd(bytes calldata encoded, uint offset) external pure returns (uint176 ret, uint nextOffset) {
    return BytesParsing.asUint176Cd(encoded, offset);
  }

  function asUint176MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint176 ret, uint nextOffset) {
    return BytesParsing.asUint176MemUnchecked(encoded, offset);
  }

  function asUint176Mem(bytes calldata encoded, uint offset) external pure returns (uint176 ret, uint nextOffset) {
    return BytesParsing.asUint176Mem(encoded, offset);
  }

  function asUint184CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint184 ret, uint nextOffset) {
    return BytesParsing.asUint184CdUnchecked(encoded, offset);
  }

  function asUint184Cd(bytes calldata encoded, uint offset) external pure returns (uint184 ret, uint nextOffset) {
    return BytesParsing.asUint184Cd(encoded, offset);
  }

  function asUint184MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint184 ret, uint nextOffset) {
    return BytesParsing.asUint184MemUnchecked(encoded, offset);
  }

  function asUint184Mem(bytes calldata encoded, uint offset) external pure returns (uint184 ret, uint nextOffset) {
    return BytesParsing.asUint184Mem(encoded, offset);
  }

  function asUint192CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint192 ret, uint nextOffset) {
    return BytesParsing.asUint192CdUnchecked(encoded, offset);
  }

  function asUint192Cd(bytes calldata encoded, uint offset) external pure returns (uint192 ret, uint nextOffset) {
    return BytesParsing.asUint192Cd(encoded, offset);
  }

  function asUint192MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint192 ret, uint nextOffset) {
    return BytesParsing.asUint192MemUnchecked(encoded, offset);
  }

  function asUint192Mem(bytes calldata encoded, uint offset) external pure returns (uint192 ret, uint nextOffset) {
    return BytesParsing.asUint192Mem(encoded, offset);
  }

  function asUint200CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint200 ret, uint nextOffset) {
    return BytesParsing.asUint200CdUnchecked(encoded, offset);
  }

  function asUint200Cd(bytes calldata encoded, uint offset) external pure returns (uint200 ret, uint nextOffset) {
    return BytesParsing.asUint200Cd(encoded, offset);
  }

  function asUint200MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint200 ret, uint nextOffset) {
    return BytesParsing.asUint200MemUnchecked(encoded, offset);
  }

  function asUint200Mem(bytes calldata encoded, uint offset) external pure returns (uint200 ret, uint nextOffset) {
    return BytesParsing.asUint200Mem(encoded, offset);
  }

  function asUint208CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint208 ret, uint nextOffset) {
    return BytesParsing.asUint208CdUnchecked(encoded, offset);
  }

  function asUint208Cd(bytes calldata encoded, uint offset) external pure returns (uint208 ret, uint nextOffset) {
    return BytesParsing.asUint208Cd(encoded, offset);
  }

  function asUint208MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint208 ret, uint nextOffset) {
    return BytesParsing.asUint208MemUnchecked(encoded, offset);
  }

  function asUint208Mem(bytes calldata encoded, uint offset) external pure returns (uint208 ret, uint nextOffset) {
    return BytesParsing.asUint208Mem(encoded, offset);
  }

  function asUint216CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint216 ret, uint nextOffset) {
    return BytesParsing.asUint216CdUnchecked(encoded, offset);
  }

  function asUint216Cd(bytes calldata encoded, uint offset) external pure returns (uint216 ret, uint nextOffset) {
    return BytesParsing.asUint216Cd(encoded, offset);
  }

  function asUint216MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint216 ret, uint nextOffset) {
    return BytesParsing.asUint216MemUnchecked(encoded, offset);
  }

  function asUint216Mem(bytes calldata encoded, uint offset) external pure returns (uint216 ret, uint nextOffset) {
    return BytesParsing.asUint216Mem(encoded, offset);
  }

  function asUint224CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint224 ret, uint nextOffset) {
    return BytesParsing.asUint224CdUnchecked(encoded, offset);
  }

  function asUint224Cd(bytes calldata encoded, uint offset) external pure returns (uint224 ret, uint nextOffset) {
    return BytesParsing.asUint224Cd(encoded, offset);
  }

  function asUint224MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint224 ret, uint nextOffset) {
    return BytesParsing.asUint224MemUnchecked(encoded, offset);
  }

  function asUint224Mem(bytes calldata encoded, uint offset) external pure returns (uint224 ret, uint nextOffset) {
    return BytesParsing.asUint224Mem(encoded, offset);
  }

  function asUint232CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint232 ret, uint nextOffset) {
    return BytesParsing.asUint232CdUnchecked(encoded, offset);
  }

  function asUint232Cd(bytes calldata encoded, uint offset) external pure returns (uint232 ret, uint nextOffset) {
    return BytesParsing.asUint232Cd(encoded, offset);
  }

  function asUint232MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint232 ret, uint nextOffset) {
    return BytesParsing.asUint232MemUnchecked(encoded, offset);
  }

  function asUint232Mem(bytes calldata encoded, uint offset) external pure returns (uint232 ret, uint nextOffset) {
    return BytesParsing.asUint232Mem(encoded, offset);
  }

  function asUint240CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint240 ret, uint nextOffset) {
    return BytesParsing.asUint240CdUnchecked(encoded, offset);
  }

  function asUint240Cd(bytes calldata encoded, uint offset) external pure returns (uint240 ret, uint nextOffset) {
    return BytesParsing.asUint240Cd(encoded, offset);
  }

  function asUint240MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint240 ret, uint nextOffset) {
    return BytesParsing.asUint240MemUnchecked(encoded, offset);
  }

  function asUint240Mem(bytes calldata encoded, uint offset) external pure returns (uint240 ret, uint nextOffset) {
    return BytesParsing.asUint240Mem(encoded, offset);
  }

  function asUint248CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint248 ret, uint nextOffset) {
    return BytesParsing.asUint248CdUnchecked(encoded, offset);
  }

  function asUint248Cd(bytes calldata encoded, uint offset) external pure returns (uint248 ret, uint nextOffset) {
    return BytesParsing.asUint248Cd(encoded, offset);
  }

  function asUint248MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint248 ret, uint nextOffset) {
    return BytesParsing.asUint248MemUnchecked(encoded, offset);
  }

  function asUint248Mem(bytes calldata encoded, uint offset) external pure returns (uint248 ret, uint nextOffset) {
    return BytesParsing.asUint248Mem(encoded, offset);
  }

  function asUint256CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint256 ret, uint nextOffset) {
    return BytesParsing.asUint256CdUnchecked(encoded, offset);
  }

  function asUint256Cd(bytes calldata encoded, uint offset) external pure returns (uint256 ret, uint nextOffset) {
    return BytesParsing.asUint256Cd(encoded, offset);
  }

  function asUint256MemUnchecked(bytes calldata encoded, uint offset) external pure returns (uint256 ret, uint nextOffset) {
    return BytesParsing.asUint256MemUnchecked(encoded, offset);
  }

  function asUint256Mem(bytes calldata encoded, uint offset) external pure returns (uint256 ret, uint nextOffset) {
    return BytesParsing.asUint256Mem(encoded, offset);
  }

  function asBytes1CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes1 ret, uint nextOffset) {
    return BytesParsing.asBytes1CdUnchecked(encoded, offset);
  }

  function asBytes1Cd(bytes calldata encoded, uint offset) external pure returns (bytes1 ret, uint nextOffset) {
    return BytesParsing.asBytes1Cd(encoded, offset);
  }

  function asBytes1MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes1 ret, uint nextOffset) {
    return BytesParsing.asBytes1MemUnchecked(encoded, offset);
  }

  function asBytes1Mem(bytes calldata encoded, uint offset) external pure returns (bytes1 ret, uint nextOffset) {
    return BytesParsing.asBytes1Mem(encoded, offset);
  }

  function asBytes2CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes2 ret, uint nextOffset) {
    return BytesParsing.asBytes2CdUnchecked(encoded, offset);
  }

  function asBytes2Cd(bytes calldata encoded, uint offset) external pure returns (bytes2 ret, uint nextOffset) {
    return BytesParsing.asBytes2Cd(encoded, offset);
  }

  function asBytes2MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes2 ret, uint nextOffset) {
    return BytesParsing.asBytes2MemUnchecked(encoded, offset);
  }

  function asBytes2Mem(bytes calldata encoded, uint offset) external pure returns (bytes2 ret, uint nextOffset) {
    return BytesParsing.asBytes2Mem(encoded, offset);
  }

  function asBytes3CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes3 ret, uint nextOffset) {
    return BytesParsing.asBytes3CdUnchecked(encoded, offset);
  }

  function asBytes3Cd(bytes calldata encoded, uint offset) external pure returns (bytes3 ret, uint nextOffset) {
    return BytesParsing.asBytes3Cd(encoded, offset);
  }

  function asBytes3MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes3 ret, uint nextOffset) {
    return BytesParsing.asBytes3MemUnchecked(encoded, offset);
  }

  function asBytes3Mem(bytes calldata encoded, uint offset) external pure returns (bytes3 ret, uint nextOffset) {
    return BytesParsing.asBytes3Mem(encoded, offset);
  }

  function asBytes4CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes4 ret, uint nextOffset) {
    return BytesParsing.asBytes4CdUnchecked(encoded, offset);
  }

  function asBytes4Cd(bytes calldata encoded, uint offset) external pure returns (bytes4 ret, uint nextOffset) {
    return BytesParsing.asBytes4Cd(encoded, offset);
  }

  function asBytes4MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes4 ret, uint nextOffset) {
    return BytesParsing.asBytes4MemUnchecked(encoded, offset);
  }

  function asBytes4Mem(bytes calldata encoded, uint offset) external pure returns (bytes4 ret, uint nextOffset) {
    return BytesParsing.asBytes4Mem(encoded, offset);
  }

  function asBytes5CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes5 ret, uint nextOffset) {
    return BytesParsing.asBytes5CdUnchecked(encoded, offset);
  }

  function asBytes5Cd(bytes calldata encoded, uint offset) external pure returns (bytes5 ret, uint nextOffset) {
    return BytesParsing.asBytes5Cd(encoded, offset);
  }

  function asBytes5MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes5 ret, uint nextOffset) {
    return BytesParsing.asBytes5MemUnchecked(encoded, offset);
  }

  function asBytes5Mem(bytes calldata encoded, uint offset) external pure returns (bytes5 ret, uint nextOffset) {
    return BytesParsing.asBytes5Mem(encoded, offset);
  }

  function asBytes6CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes6 ret, uint nextOffset) {
    return BytesParsing.asBytes6CdUnchecked(encoded, offset);
  }

  function asBytes6Cd(bytes calldata encoded, uint offset) external pure returns (bytes6 ret, uint nextOffset) {
    return BytesParsing.asBytes6Cd(encoded, offset);
  }

  function asBytes6MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes6 ret, uint nextOffset) {
    return BytesParsing.asBytes6MemUnchecked(encoded, offset);
  }

  function asBytes6Mem(bytes calldata encoded, uint offset) external pure returns (bytes6 ret, uint nextOffset) {
    return BytesParsing.asBytes6Mem(encoded, offset);
  }

  function asBytes7CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes7 ret, uint nextOffset) {
    return BytesParsing.asBytes7CdUnchecked(encoded, offset);
  }

  function asBytes7Cd(bytes calldata encoded, uint offset) external pure returns (bytes7 ret, uint nextOffset) {
    return BytesParsing.asBytes7Cd(encoded, offset);
  }

  function asBytes7MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes7 ret, uint nextOffset) {
    return BytesParsing.asBytes7MemUnchecked(encoded, offset);
  }

  function asBytes7Mem(bytes calldata encoded, uint offset) external pure returns (bytes7 ret, uint nextOffset) {
    return BytesParsing.asBytes7Mem(encoded, offset);
  }

  function asBytes8CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes8 ret, uint nextOffset) {
    return BytesParsing.asBytes8CdUnchecked(encoded, offset);
  }

  function asBytes8Cd(bytes calldata encoded, uint offset) external pure returns (bytes8 ret, uint nextOffset) {
    return BytesParsing.asBytes8Cd(encoded, offset);
  }

  function asBytes8MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes8 ret, uint nextOffset) {
    return BytesParsing.asBytes8MemUnchecked(encoded, offset);
  }

  function asBytes8Mem(bytes calldata encoded, uint offset) external pure returns (bytes8 ret, uint nextOffset) {
    return BytesParsing.asBytes8Mem(encoded, offset);
  }

  function asBytes9CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes9 ret, uint nextOffset) {
    return BytesParsing.asBytes9CdUnchecked(encoded, offset);
  }

  function asBytes9Cd(bytes calldata encoded, uint offset) external pure returns (bytes9 ret, uint nextOffset) {
    return BytesParsing.asBytes9Cd(encoded, offset);
  }

  function asBytes9MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes9 ret, uint nextOffset) {
    return BytesParsing.asBytes9MemUnchecked(encoded, offset);
  }

  function asBytes9Mem(bytes calldata encoded, uint offset) external pure returns (bytes9 ret, uint nextOffset) {
    return BytesParsing.asBytes9Mem(encoded, offset);
  }

  function asBytes10CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes10 ret, uint nextOffset) {
    return BytesParsing.asBytes10CdUnchecked(encoded, offset);
  }

  function asBytes10Cd(bytes calldata encoded, uint offset) external pure returns (bytes10 ret, uint nextOffset) {
    return BytesParsing.asBytes10Cd(encoded, offset);
  }

  function asBytes10MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes10 ret, uint nextOffset) {
    return BytesParsing.asBytes10MemUnchecked(encoded, offset);
  }

  function asBytes10Mem(bytes calldata encoded, uint offset) external pure returns (bytes10 ret, uint nextOffset) {
    return BytesParsing.asBytes10Mem(encoded, offset);
  }

  function asBytes11CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes11 ret, uint nextOffset) {
    return BytesParsing.asBytes11CdUnchecked(encoded, offset);
  }

  function asBytes11Cd(bytes calldata encoded, uint offset) external pure returns (bytes11 ret, uint nextOffset) {
    return BytesParsing.asBytes11Cd(encoded, offset);
  }

  function asBytes11MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes11 ret, uint nextOffset) {
    return BytesParsing.asBytes11MemUnchecked(encoded, offset);
  }

  function asBytes11Mem(bytes calldata encoded, uint offset) external pure returns (bytes11 ret, uint nextOffset) {
    return BytesParsing.asBytes11Mem(encoded, offset);
  }

  function asBytes12CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes12 ret, uint nextOffset) {
    return BytesParsing.asBytes12CdUnchecked(encoded, offset);
  }

  function asBytes12Cd(bytes calldata encoded, uint offset) external pure returns (bytes12 ret, uint nextOffset) {
    return BytesParsing.asBytes12Cd(encoded, offset);
  }

  function asBytes12MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes12 ret, uint nextOffset) {
    return BytesParsing.asBytes12MemUnchecked(encoded, offset);
  }

  function asBytes12Mem(bytes calldata encoded, uint offset) external pure returns (bytes12 ret, uint nextOffset) {
    return BytesParsing.asBytes12Mem(encoded, offset);
  }

  function asBytes13CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes13 ret, uint nextOffset) {
    return BytesParsing.asBytes13CdUnchecked(encoded, offset);
  }

  function asBytes13Cd(bytes calldata encoded, uint offset) external pure returns (bytes13 ret, uint nextOffset) {
    return BytesParsing.asBytes13Cd(encoded, offset);
  }

  function asBytes13MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes13 ret, uint nextOffset) {
    return BytesParsing.asBytes13MemUnchecked(encoded, offset);
  }

  function asBytes13Mem(bytes calldata encoded, uint offset) external pure returns (bytes13 ret, uint nextOffset) {
    return BytesParsing.asBytes13Mem(encoded, offset);
  }

  function asBytes14CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes14 ret, uint nextOffset) {
    return BytesParsing.asBytes14CdUnchecked(encoded, offset);
  }

  function asBytes14Cd(bytes calldata encoded, uint offset) external pure returns (bytes14 ret, uint nextOffset) {
    return BytesParsing.asBytes14Cd(encoded, offset);
  }

  function asBytes14MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes14 ret, uint nextOffset) {
    return BytesParsing.asBytes14MemUnchecked(encoded, offset);
  }

  function asBytes14Mem(bytes calldata encoded, uint offset) external pure returns (bytes14 ret, uint nextOffset) {
    return BytesParsing.asBytes14Mem(encoded, offset);
  }

  function asBytes15CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes15 ret, uint nextOffset) {
    return BytesParsing.asBytes15CdUnchecked(encoded, offset);
  }

  function asBytes15Cd(bytes calldata encoded, uint offset) external pure returns (bytes15 ret, uint nextOffset) {
    return BytesParsing.asBytes15Cd(encoded, offset);
  }

  function asBytes15MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes15 ret, uint nextOffset) {
    return BytesParsing.asBytes15MemUnchecked(encoded, offset);
  }

  function asBytes15Mem(bytes calldata encoded, uint offset) external pure returns (bytes15 ret, uint nextOffset) {
    return BytesParsing.asBytes15Mem(encoded, offset);
  }

  function asBytes16CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes16 ret, uint nextOffset) {
    return BytesParsing.asBytes16CdUnchecked(encoded, offset);
  }

  function asBytes16Cd(bytes calldata encoded, uint offset) external pure returns (bytes16 ret, uint nextOffset) {
    return BytesParsing.asBytes16Cd(encoded, offset);
  }

  function asBytes16MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes16 ret, uint nextOffset) {
    return BytesParsing.asBytes16MemUnchecked(encoded, offset);
  }

  function asBytes16Mem(bytes calldata encoded, uint offset) external pure returns (bytes16 ret, uint nextOffset) {
    return BytesParsing.asBytes16Mem(encoded, offset);
  }

  function asBytes17CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes17 ret, uint nextOffset) {
    return BytesParsing.asBytes17CdUnchecked(encoded, offset);
  }

  function asBytes17Cd(bytes calldata encoded, uint offset) external pure returns (bytes17 ret, uint nextOffset) {
    return BytesParsing.asBytes17Cd(encoded, offset);
  }

  function asBytes17MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes17 ret, uint nextOffset) {
    return BytesParsing.asBytes17MemUnchecked(encoded, offset);
  }

  function asBytes17Mem(bytes calldata encoded, uint offset) external pure returns (bytes17 ret, uint nextOffset) {
    return BytesParsing.asBytes17Mem(encoded, offset);
  }

  function asBytes18CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes18 ret, uint nextOffset) {
    return BytesParsing.asBytes18CdUnchecked(encoded, offset);
  }

  function asBytes18Cd(bytes calldata encoded, uint offset) external pure returns (bytes18 ret, uint nextOffset) {
    return BytesParsing.asBytes18Cd(encoded, offset);
  }

  function asBytes18MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes18 ret, uint nextOffset) {
    return BytesParsing.asBytes18MemUnchecked(encoded, offset);
  }

  function asBytes18Mem(bytes calldata encoded, uint offset) external pure returns (bytes18 ret, uint nextOffset) {
    return BytesParsing.asBytes18Mem(encoded, offset);
  }

  function asBytes19CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes19 ret, uint nextOffset) {
    return BytesParsing.asBytes19CdUnchecked(encoded, offset);
  }

  function asBytes19Cd(bytes calldata encoded, uint offset) external pure returns (bytes19 ret, uint nextOffset) {
    return BytesParsing.asBytes19Cd(encoded, offset);
  }

  function asBytes19MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes19 ret, uint nextOffset) {
    return BytesParsing.asBytes19MemUnchecked(encoded, offset);
  }

  function asBytes19Mem(bytes calldata encoded, uint offset) external pure returns (bytes19 ret, uint nextOffset) {
    return BytesParsing.asBytes19Mem(encoded, offset);
  }

  function asBytes20CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes20 ret, uint nextOffset) {
    return BytesParsing.asBytes20CdUnchecked(encoded, offset);
  }

  function asBytes20Cd(bytes calldata encoded, uint offset) external pure returns (bytes20 ret, uint nextOffset) {
    return BytesParsing.asBytes20Cd(encoded, offset);
  }

  function asBytes20MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes20 ret, uint nextOffset) {
    return BytesParsing.asBytes20MemUnchecked(encoded, offset);
  }

  function asBytes20Mem(bytes calldata encoded, uint offset) external pure returns (bytes20 ret, uint nextOffset) {
    return BytesParsing.asBytes20Mem(encoded, offset);
  }

  function asBytes21CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes21 ret, uint nextOffset) {
    return BytesParsing.asBytes21CdUnchecked(encoded, offset);
  }

  function asBytes21Cd(bytes calldata encoded, uint offset) external pure returns (bytes21 ret, uint nextOffset) {
    return BytesParsing.asBytes21Cd(encoded, offset);
  }

  function asBytes21MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes21 ret, uint nextOffset) {
    return BytesParsing.asBytes21MemUnchecked(encoded, offset);
  }

  function asBytes21Mem(bytes calldata encoded, uint offset) external pure returns (bytes21 ret, uint nextOffset) {
    return BytesParsing.asBytes21Mem(encoded, offset);
  }

  function asBytes22CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes22 ret, uint nextOffset) {
    return BytesParsing.asBytes22CdUnchecked(encoded, offset);
  }

  function asBytes22Cd(bytes calldata encoded, uint offset) external pure returns (bytes22 ret, uint nextOffset) {
    return BytesParsing.asBytes22Cd(encoded, offset);
  }

  function asBytes22MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes22 ret, uint nextOffset) {
    return BytesParsing.asBytes22MemUnchecked(encoded, offset);
  }

  function asBytes22Mem(bytes calldata encoded, uint offset) external pure returns (bytes22 ret, uint nextOffset) {
    return BytesParsing.asBytes22Mem(encoded, offset);
  }

  function asBytes23CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes23 ret, uint nextOffset) {
    return BytesParsing.asBytes23CdUnchecked(encoded, offset);
  }

  function asBytes23Cd(bytes calldata encoded, uint offset) external pure returns (bytes23 ret, uint nextOffset) {
    return BytesParsing.asBytes23Cd(encoded, offset);
  }

  function asBytes23MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes23 ret, uint nextOffset) {
    return BytesParsing.asBytes23MemUnchecked(encoded, offset);
  }

  function asBytes23Mem(bytes calldata encoded, uint offset) external pure returns (bytes23 ret, uint nextOffset) {
    return BytesParsing.asBytes23Mem(encoded, offset);
  }

  function asBytes24CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes24 ret, uint nextOffset) {
    return BytesParsing.asBytes24CdUnchecked(encoded, offset);
  }

  function asBytes24Cd(bytes calldata encoded, uint offset) external pure returns (bytes24 ret, uint nextOffset) {
    return BytesParsing.asBytes24Cd(encoded, offset);
  }

  function asBytes24MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes24 ret, uint nextOffset) {
    return BytesParsing.asBytes24MemUnchecked(encoded, offset);
  }

  function asBytes24Mem(bytes calldata encoded, uint offset) external pure returns (bytes24 ret, uint nextOffset) {
    return BytesParsing.asBytes24Mem(encoded, offset);
  }

  function asBytes25CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes25 ret, uint nextOffset) {
    return BytesParsing.asBytes25CdUnchecked(encoded, offset);
  }

  function asBytes25Cd(bytes calldata encoded, uint offset) external pure returns (bytes25 ret, uint nextOffset) {
    return BytesParsing.asBytes25Cd(encoded, offset);
  }

  function asBytes25MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes25 ret, uint nextOffset) {
    return BytesParsing.asBytes25MemUnchecked(encoded, offset);
  }

  function asBytes25Mem(bytes calldata encoded, uint offset) external pure returns (bytes25 ret, uint nextOffset) {
    return BytesParsing.asBytes25Mem(encoded, offset);
  }

  function asBytes26CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes26 ret, uint nextOffset) {
    return BytesParsing.asBytes26CdUnchecked(encoded, offset);
  }

  function asBytes26Cd(bytes calldata encoded, uint offset) external pure returns (bytes26 ret, uint nextOffset) {
    return BytesParsing.asBytes26Cd(encoded, offset);
  }

  function asBytes26MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes26 ret, uint nextOffset) {
    return BytesParsing.asBytes26MemUnchecked(encoded, offset);
  }

  function asBytes26Mem(bytes calldata encoded, uint offset) external pure returns (bytes26 ret, uint nextOffset) {
    return BytesParsing.asBytes26Mem(encoded, offset);
  }

  function asBytes27CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes27 ret, uint nextOffset) {
    return BytesParsing.asBytes27CdUnchecked(encoded, offset);
  }

  function asBytes27Cd(bytes calldata encoded, uint offset) external pure returns (bytes27 ret, uint nextOffset) {
    return BytesParsing.asBytes27Cd(encoded, offset);
  }

  function asBytes27MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes27 ret, uint nextOffset) {
    return BytesParsing.asBytes27MemUnchecked(encoded, offset);
  }

  function asBytes27Mem(bytes calldata encoded, uint offset) external pure returns (bytes27 ret, uint nextOffset) {
    return BytesParsing.asBytes27Mem(encoded, offset);
  }

  function asBytes28CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes28 ret, uint nextOffset) {
    return BytesParsing.asBytes28CdUnchecked(encoded, offset);
  }

  function asBytes28Cd(bytes calldata encoded, uint offset) external pure returns (bytes28 ret, uint nextOffset) {
    return BytesParsing.asBytes28Cd(encoded, offset);
  }

  function asBytes28MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes28 ret, uint nextOffset) {
    return BytesParsing.asBytes28MemUnchecked(encoded, offset);
  }

  function asBytes28Mem(bytes calldata encoded, uint offset) external pure returns (bytes28 ret, uint nextOffset) {
    return BytesParsing.asBytes28Mem(encoded, offset);
  }

  function asBytes29CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes29 ret, uint nextOffset) {
    return BytesParsing.asBytes29CdUnchecked(encoded, offset);
  }

  function asBytes29Cd(bytes calldata encoded, uint offset) external pure returns (bytes29 ret, uint nextOffset) {
    return BytesParsing.asBytes29Cd(encoded, offset);
  }

  function asBytes29MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes29 ret, uint nextOffset) {
    return BytesParsing.asBytes29MemUnchecked(encoded, offset);
  }

  function asBytes29Mem(bytes calldata encoded, uint offset) external pure returns (bytes29 ret, uint nextOffset) {
    return BytesParsing.asBytes29Mem(encoded, offset);
  }

  function asBytes30CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes30 ret, uint nextOffset) {
    return BytesParsing.asBytes30CdUnchecked(encoded, offset);
  }

  function asBytes30Cd(bytes calldata encoded, uint offset) external pure returns (bytes30 ret, uint nextOffset) {
    return BytesParsing.asBytes30Cd(encoded, offset);
  }

  function asBytes30MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes30 ret, uint nextOffset) {
    return BytesParsing.asBytes30MemUnchecked(encoded, offset);
  }

  function asBytes30Mem(bytes calldata encoded, uint offset) external pure returns (bytes30 ret, uint nextOffset) {
    return BytesParsing.asBytes30Mem(encoded, offset);
  }

  function asBytes31CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes31 ret, uint nextOffset) {
    return BytesParsing.asBytes31CdUnchecked(encoded, offset);
  }

  function asBytes31Cd(bytes calldata encoded, uint offset) external pure returns (bytes31 ret, uint nextOffset) {
    return BytesParsing.asBytes31Cd(encoded, offset);
  }

  function asBytes31MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes31 ret, uint nextOffset) {
    return BytesParsing.asBytes31MemUnchecked(encoded, offset);
  }

  function asBytes31Mem(bytes calldata encoded, uint offset) external pure returns (bytes31 ret, uint nextOffset) {
    return BytesParsing.asBytes31Mem(encoded, offset);
  }

  function asBytes32CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes32 ret, uint nextOffset) {
    return BytesParsing.asBytes32CdUnchecked(encoded, offset);
  }

  function asBytes32Cd(bytes calldata encoded, uint offset) external pure returns (bytes32 ret, uint nextOffset) {
    return BytesParsing.asBytes32Cd(encoded, offset);
  }

  function asBytes32MemUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes32 ret, uint nextOffset) {
    return BytesParsing.asBytes32MemUnchecked(encoded, offset);
  }

  function asBytes32Mem(bytes calldata encoded, uint offset) external pure returns (bytes32 ret, uint nextOffset) {
    return BytesParsing.asBytes32Mem(encoded, offset);
  }
}
