// SPDX-License-Identifier: Apache 2
pragma solidity ^0.8.24;

import "wormhole-sdk/libraries/ReplayProtection.sol";

// This file was auto-generated by wormhole-solidity-sdk gen/libraryTestWrapper.ts

contract SequenceReplayProtectionLibTestWrapper {
  function replayProtect(
    uint16 emitterChainId,
    bytes32 emitterAddress,
    uint64 sequence
  ) external {
    SequenceReplayProtectionLib.replayProtect(emitterChainId, emitterAddress, sequence);
  }

  function isReplayProtected(
    uint16 emitterChainId,
    bytes32 emitterAddress,
    uint64 sequence
  ) external view returns (bool) {
    return SequenceReplayProtectionLib.isReplayProtected(emitterChainId, emitterAddress, sequence);
  }
}

contract HashReplayProtectionLibTestWrapper {
  function replayProtect(bytes32 vaaHash) external {
    HashReplayProtectionLib.replayProtect(vaaHash);
  }

  function isReplayProtected(bytes32 vaaHash) external view returns (bool) {
    return HashReplayProtectionLib.isReplayProtected(vaaHash);
  }

  function replayProtect(bytes calldata encodedVaa) external {
    HashReplayProtectionLib.replayProtect(encodedVaa);
  }

  function isReplayProtected(bytes calldata encodedVaa) external view returns (bool) {
    return HashReplayProtectionLib.isReplayProtected(encodedVaa);
  }
}
